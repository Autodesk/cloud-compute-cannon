compute:
  build: "./"
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    #Mount local storage, even though it might use S3, we don't know at this point.
    - ./data/computejobs:/computejobs
    - ./data/ServiceStorageLocalFileSystem:/app/data/ServiceStorageLocalFileSystem
  links:
    - redis
    - registry
    - fluentd
  environment:
    HOST_PWD: "$PWD"
  log_driver: "fluentd"
  log_opt:
    tag: "docker.nodejs-bunyan.cloudcomputecannon.server.{{.ImageName}}/{{.ID}}"
    fluentd-address: "localhost:24225"


redis:
  log_driver: "fluentd"
  log_opt:
    tag: "docker.redis.cloudcomputecannon.server.{{.ImageName}}/{{.ID}}"
    fluentd-address: "localhost:24225"
  #This config disables persistance to disk since we do not need it for development
  command: redis-server /usr/local/etc/redis/redis.conf
  volumes:
    - ./etc/redis/redis-prod.conf:/usr/local/etc/redis/redis.conf
    # This is the where the db will be writting. It is defined in ./etc/redis/redis-prod.conf
    - /data
  ports:
    #Don't expose this port to the host, only linked containers.
    - "6379"


registry:
  volumes:
    #Always persist the registry locally. This makes it easier to clean.
    - ./data/registry:/var/lib/registry
  #TODO: use a more sophisticated cleanup mechanism, and use redis?
  environment:
    SETTINGS_FLAVOR: local
    REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
  links:
    - fluentd
  #It's hard to find a use case for logging this.


fluentd:
  build: ./etc/log/
  volumes:
    - ./etc/log/fluent.prod.conf:/fluentd/etc/fluent.conf
    - ./etc/log/plugins:/fluentd/plugins
