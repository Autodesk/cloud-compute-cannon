#!/usr/bin/env bash
set -e

if [ $# -eq 0 ]; then
	echo ""
    echo "    Package and deploy the CCC autoscaling group the AWS"
    echo ""
    echo "    -k/--key         AWS Access Key Id"
    echo "    -s/--secret      AWS Access Key Secret"
    echo "    -t/--tag         BNP env tag (dev|qa|prod). Defaults to dev. Determines deploy region"
    echo ""
    exit 0
fi

# Use -gt 1 to consume two arguments per pass in the loop (e.g. each
# argument has a corresponding value to go with it).
# Use -gt 0 to consume one or more arguments per pass in the loop (e.g.
# some arguments don't have a corresponding value to go with it such
# as in the --default example).
# note: if this is set to -gt 0 the /etc/hosts part is not recognized ( may be a bug )

BNR_ENVIRONMENT="dev"

while [[ $# -gt 1 ]]
do
key="$1"

case $key in
    -k|--key)
    AWS_ACCESS_KEY_ID="$2"
    shift # past argument
    ;;
    -s|--secret)
    AWS_SECRET_ACCESS_KEY="$2"
    shift # past argument
    ;;
    -t|--tag)
    BNR_ENVIRONMENT="$2"
    shift # past argument
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

REGION="us-west-2"

case "$BNR_ENVIRONMENT" in
        dev)
            REGION="us-west-2"
            ;;
        qa)
            REGION="us-east-1"
            ;;
        prod)
            REGION="us-east-1"
            ;;
        test)
            REGION="us-west-1"
            ;;
esac

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

STACKNAME="CCC-Autoscaling-Group"

isStack(){
    COMMAND="aws --region $REGION cloudformation describe-stacks --stack-name $STACKNAME"
	$COMMAND > /dev/null 2>&1
}

if isStack ; then
	echo "Stack exists, updating..."
	aws --region $REGION cloudformation update-stack \
		--stack-name $STACKNAME \
		--capabilities CAPABILITY_IAM \
		--parameters ParameterKey=S3Bucket,ParameterValue=$S3BUCKET \
		    ParameterKey=S3Key,ParameterValue=$S3KEY \
		    ParameterKey=BionanoEnvironment,ParameterValue=$BNR_ENVIRONMENT \
		--template-body file://$DIR/aws-ccc-cloudformation.json
else
	echo "Stack does not exist, creating..."
	aws --region $REGION cloudformation create-stack \
		--stack-name $STACKNAME \
		--capabilities CAPABILITY_IAM \
		--parameters ParameterKey=S3Bucket,ParameterValue=$S3BUCKET \
		    ParameterKey=S3Key,ParameterValue=$S3KEY \
		    ParameterKey=BionanoEnvironment,ParameterValue=$BNR_ENVIRONMENT \
		--template-body file://$DIR/aws-ccc-cloudformation.json
fi
